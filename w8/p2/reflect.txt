///////////////////////////////////////////////////////////////////////////
                               Reflection
                             Workshop - #8
Full Name  : Jeelkumar Vinodkumar Patel
Student ID#: 115766222

Authenticity Declaration:
I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////

							Answers:

Ans(1): Basically, we can use helper function in two different ways which are by return statement and through an arguement. Moreover, it will help the user to make the code more flexible as they can choose which method they want to use in their programme. Although, user can get more benefits by using multiple variables in the programme, sometimes it makes the code more complex to understand or to read which might lead to errors in the programme.

Ans(2): In functions, highly cohesive functions performs single and performs specific task. Moreover, it makes the functions easier to understand and maintain. Additionally, they are not depends on other parts of the programme.For example, I have used  int getIntPositive(int* values) in this we can pass some arguements to improve it while in low coupling the components should be able to function on its own which makes the code more adaptable to run. Mostly,low coupling has less chance of errors. For example, I have used void displayFinalAnalysis(const struct CatFoodInfo petFood) and in order to make it more efficient we can use arguements in the code.

Ans(3): We use structures in functions to avoid the more number of arguements in functions which will make the code more flexible and easy to understand.It also upgrade the reusage of the code and it also requires less memory and improve efficiency. In order to improve displayCatfoodData we can use pointers in it to make it more effective.s