///////////////////////////////////////////////////////////////////////////
                              Reflection
                          Workshop - #2 (P2)
Full Name  : Jeelkumar Vinodkumar Patel
Student ID#: 115766222
Email      : jpatel391@myseneca.ca
Section    : NEE

Authenticity Declaration:

I declare this submission is the result of my own work and has not been
shared with any other student or 3rd party content provider. This submitted
piece of work is entirely of my own creation.
///////////////////////////////////////////////////////////////////////////



ANSWERS:

Ans(1):The main reason behind this issue is that in first printf they have used %f which is a floating-point number which is used for float data types
	which means that floating-point number can only represent the limited value and that's why it cannot show a precise decimal value,
	while in other cases, they have used double data type which can represent more accurate value as it can store larger decimal values.

Ans(2):Basically, in this code they have used integer data type and a variable named money also they have declared its value which is 7245.Moreover,
	in all the printfs they have divided the value by 100 as a dollar amount.In first printf statement, they have used float data type in 100.0 literal
	 but it actually a type of double.
	Because of this, as one of the operand is in double data type,another one will also promoted as double before the division takes place.This is called an implicit type promotion.
	While, in the second printf statement, the division was done by using "money/(double)100.This is an explicit type cast of integer 100 to a double.And in the third printf statement,
	the division was done by using the expression "(double)money/100".This is an explicit type cast of the integer variable "money" to a double before the division takes place.
	Finally in all the three examples, the money value was divided(/) by 100, the result was printed as a dollar amount using the "%2lf" format specifier in the printf, which eventually declares the value in 2 decimal places.

Ans(3):
	(a)In the first line, result variable is an integer varriable and its value is 7245 but it is actually 72 as result= money/100 where money is also 7245 but in result it is devided by 100 so it will be 72 by applying rounding method as the output would requires in ineger value.
	Also this is an example of an implicit assignment.
	
	(b)For all the samples the value will be same 72. As in the first printf the division of 7245 was done by 100 which will take 2 decimal places.
	In the second sample, the original value was 7245 but it was divided by 100 which will be 7245 but it is  %d format specifier which means it will be an integer division that is why the answer would be 72.
	And in the third sample, the value displayed is 72.00 this is the result of the integer division of 7245 by 100, which eventually declares the values in 2 decimal places.
	In the last sample,the value was 7245 which was divided by 100 and turns out in 72.45 but in the fourth sample the format soecifier is %d which is an integer format specifier so the answer would be 72.
	
	(c) The reason behind this issue is that in printf 1 and 3 they have used %2lf format sspecifier b=which is actually used for double data type which gives more precise value but variable used in it is in integer data type that is why the output is not work as expected as the decimal value will be rounded up in integer value.That is why the answer is 72.
	